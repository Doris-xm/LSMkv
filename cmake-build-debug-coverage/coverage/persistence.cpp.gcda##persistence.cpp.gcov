        -:    0:Source:E:/CppProject/dataStruct2023/LSMkv/test/persistence.cpp
        -:    0:Graph:E:\CppProject\dataStruct2023\LSMkv\cmake-build-debug-coverage\CMakeFiles\LSMkv_persist.dir\test\persistence.cpp.gcno
        -:    0:Data:E:\CppProject\dataStruct2023\LSMkv\cmake-build-debug-coverage\CMakeFiles\LSMkv_persist.dir\test\persistence.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <cstdint>
        -:    3:#include <string>
        -:    4:#include <cassert>
        -:    5:
        -:    6:#include "test.h"
        -:    7:
        -:    8:class PersistenceTest : public Test {
        -:    9:private:
        -:   10:    const uint64_t TEST_MAX = 1024 * 3;//1024 * 32
function _ZN15PersistenceTest7prepareEy called 1 returned 0% blocks executed 40%
        1:   11:    void prepare(uint64_t max)
        -:   12:    {
        -:   13:        uint64_t i;
        -:   14:
        -:   15:        // Clean up
        1:   16:        store.reset();
        1:   16-block  0
call    0 returned 1
        -:   17:
        -:   18:        // Test multiple key-value pairs
     3073:   19:        for (i = 0; i < max; ++i) {
     3073:   19-block  0
branch  0 taken 3072
branch  1 taken 1 (fallthrough)
     3072:   20:            store.put(i, std::string(i+1, 's'));
     3072:   20-block  0
call    0 returned 3072
call    1 returned 3072
branch  2 taken 3072 (fallthrough)
branch  3 taken 0 (throw)
     3072:   20-block  1
call    4 returned 3072
branch  5 taken 3072 (fallthrough)
branch  6 taken 0 (throw)
     3072:   20-block  2
call    7 returned 3072
call    8 returned 3072
    $$$$$:   20-block  3
call    9 never executed
    $$$$$:   20-block  4
    $$$$$:   20-block  5
call   10 never executed
    $$$$$:   20-block  6
call   11 never executed
     3072:   21:            EXPECT(std::string(i+1, 's'), store.get(i));
call    0 returned 3072
call    1 returned 3072
branch  2 taken 3072 (fallthrough)
branch  3 taken 0 (throw)
     3072:   21-block  0
call    4 returned 3072
branch  5 taken 3072 (fallthrough)
branch  6 taken 0 (throw)
     3072:   21-block  1
call    7 returned 3072
call    8 returned 3072
branch  9 taken 3072 (fallthrough)
branch 10 taken 0 (throw)
     3072:   21-block  2
call   11 returned 3072
branch 12 taken 3072 (fallthrough)
branch 13 taken 0 (throw)
     3072:   21-block  3
call   14 returned 3072
call   15 returned 3072
call   16 returned 3072
call   17 returned 3072
call   18 returned 3072
    $$$$$:   21-block  4
call   19 never executed
    $$$$$:   21-block  5
    $$$$$:   21-block  6
call   20 never executed
    $$$$$:   21-block  7
    $$$$$:   21-block  8
call   21 never executed
    $$$$$:   21-block  9
    $$$$$:   21-block 10
call   22 never executed
    $$$$$:   21-block 11
    $$$$$:   21-block 12
call   23 never executed
    $$$$$:   21-block 13
call   24 never executed
        -:   22:        }
        1:   23:        phase();
        1:   23-block  0
call    0 returned 1
        -:   24:
        -:   25:        // Test after all insertions
     3073:   26:        for (i = 0; i < max; ++i)
     3073:   26-block  0
branch  0 taken 3072
branch  1 taken 1 (fallthrough)
     3072:   27:            EXPECT(std::string(i+1, 's'), store.get(i));
     3072:   27-block  0
call    0 returned 3072
call    1 returned 3072
branch  2 taken 3072 (fallthrough)
branch  3 taken 0 (throw)
     3072:   27-block  1
call    4 returned 3072
branch  5 taken 3072 (fallthrough)
branch  6 taken 0 (throw)
     3072:   27-block  2
call    7 returned 3072
call    8 returned 3072
branch  9 taken 3072 (fallthrough)
branch 10 taken 0 (throw)
     3072:   27-block  3
call   11 returned 3072
branch 12 taken 3072 (fallthrough)
branch 13 taken 0 (throw)
     3072:   27-block  4
call   14 returned 3072
call   15 returned 3072
call   16 returned 3072
call   17 returned 3072
call   18 returned 3072
    $$$$$:   27-block  5
call   19 never executed
    $$$$$:   27-block  6
    $$$$$:   27-block  7
call   20 never executed
    $$$$$:   27-block  8
    $$$$$:   27-block  9
call   21 never executed
    $$$$$:   27-block 10
    $$$$$:   27-block 11
call   22 never executed
    $$$$$:   27-block 12
    $$$$$:   27-block 13
call   23 never executed
    $$$$$:   27-block 14
call   24 never executed
        1:   28:        phase();
        1:   28-block  0
call    0 returned 1
        -:   29:
        -:   30:        // Test deletions
     1537:   31:        for (i = 0; i < max; i+=2) {
     1537:   31-block  0
branch  0 taken 1536
branch  1 taken 1 (fallthrough)
     1536:   32:            if(i == 2650)
     1536:   32-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1535
        1:   33:                std::cout << "i = " << i << std::endl;
        1:   33-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
     1536:   34:            EXPECT(true, store.del(i));
     1536:   34-block  0
call    0 returned 1536
call    1 returned 1536
branch  2 taken 1536 (fallthrough)
branch  3 taken 0 (throw)
     1536:   34-block  1
call    4 returned 1536
branch  5 taken 1536 (fallthrough)
branch  6 taken 0 (throw)
     1536:   34-block  2
call    7 returned 1536
branch  8 taken 1536 (fallthrough)
branch  9 taken 0 (throw)
     1536:   34-block  3
call   10 returned 1536
call   11 returned 1536
    $$$$$:   34-block  4
    $$$$$:   34-block  5
    $$$$$:   34-block  6
call   12 never executed
    $$$$$:   34-block  7
    $$$$$:   34-block  8
call   13 never executed
    $$$$$:   34-block  9
call   14 never executed
        -:   35:        }
        -:   36:        // Prepare data for Test Mode
     2649:   37:        for (i = 0; i < max; ++i) {
        1:   37-block  0
     2648:   37-block  1
     2649:   37-block  2
branch  0 taken 2649
branch  1 taken 0 (fallthrough)
     2649:   38:            switch (i & 3) {
     2649:   38-block  0
branch  0 taken 663
branch  1 taken 662
branch  2 taken 662
branch  3 taken 662
branch  4 taken 0
      663:   39:                case 0:
      663:   40:                    EXPECT(not_found, store.get(i));
      663:   40-block  0
call    0 returned 663
call    1 returned 663
branch  2 taken 663 (fallthrough)
branch  3 taken 0 (throw)
      663:   40-block  1
call    4 returned 663
branch  5 taken 663 (fallthrough)
branch  6 taken 0 (throw)
      663:   40-block  2
call    7 returned 663
branch  8 taken 663 (fallthrough)
branch  9 taken 0 (throw)
      663:   40-block  3
call   10 returned 663
call   11 returned 663
call   12 returned 663
    $$$$$:   40-block  4
call   13 never executed
    $$$$$:   40-block  5
    $$$$$:   40-block  6
call   14 never executed
    $$$$$:   40-block  7
    $$$$$:   40-block  8
call   15 never executed
    $$$$$:   40-block  9
call   16 never executed
      663:   41:                    store.put(i, std::string(i+1, 't'));
call    0 returned 663
call    1 returned 663
branch  2 taken 663 (fallthrough)
branch  3 taken 0 (throw)
      663:   41-block  0
call    4 returned 662
branch  5 taken 662 (fallthrough)
branch  6 taken 0 (throw)
      662:   41-block  1
call    7 returned 662
call    8 returned 662
    $$$$$:   41-block  2
call    9 never executed
    $$$$$:   41-block  3
    $$$$$:   41-block  4
call   10 never executed
    $$$$$:   41-block  5
call   11 never executed
      662:   42:                    break;
      662:   43:                case 1:
      662:   44:                    EXPECT(std::string(i+1, 's'), store.get(i));
      662:   44-block  0
call    0 returned 662
call    1 returned 662
branch  2 taken 662 (fallthrough)
branch  3 taken 0 (throw)
      662:   44-block  1
call    4 returned 662
branch  5 taken 662 (fallthrough)
branch  6 taken 0 (throw)
      662:   44-block  2
call    7 returned 662
call    8 returned 662
branch  9 taken 662 (fallthrough)
branch 10 taken 0 (throw)
      662:   44-block  3
call   11 returned 662
branch 12 taken 662 (fallthrough)
branch 13 taken 0 (throw)
      662:   44-block  4
call   14 returned 662
call   15 returned 662
call   16 returned 662
call   17 returned 662
call   18 returned 662
    $$$$$:   44-block  5
call   19 never executed
    $$$$$:   44-block  6
    $$$$$:   44-block  7
call   20 never executed
    $$$$$:   44-block  8
    $$$$$:   44-block  9
call   21 never executed
    $$$$$:   44-block 10
    $$$$$:   44-block 11
call   22 never executed
    $$$$$:   44-block 12
    $$$$$:   44-block 13
call   23 never executed
    $$$$$:   44-block 14
call   24 never executed
      662:   45:                    store.put(i, std::string(i+1, 't'));
call    0 returned 662
call    1 returned 662
branch  2 taken 662 (fallthrough)
branch  3 taken 0 (throw)
      662:   45-block  0
call    4 returned 662
branch  5 taken 662 (fallthrough)
branch  6 taken 0 (throw)
      662:   45-block  1
call    7 returned 662
call    8 returned 662
    $$$$$:   45-block  2
call    9 never executed
    $$$$$:   45-block  3
    $$$$$:   45-block  4
call   10 never executed
    $$$$$:   45-block  5
call   11 never executed
      662:   46:                    break;
      662:   47:                case 2:
      662:   48:                    EXPECT(not_found, store.get(i));
      662:   48-block  0
call    0 returned 662
call    1 returned 662
branch  2 taken 662 (fallthrough)
branch  3 taken 0 (throw)
      662:   48-block  1
call    4 returned 662
branch  5 taken 662 (fallthrough)
branch  6 taken 0 (throw)
      662:   48-block  2
call    7 returned 662
branch  8 taken 662 (fallthrough)
branch  9 taken 0 (throw)
      662:   48-block  3
call   10 returned 662
call   11 returned 662
call   12 returned 662
    $$$$$:   48-block  4
call   13 never executed
    $$$$$:   48-block  5
    $$$$$:   48-block  6
call   14 never executed
    $$$$$:   48-block  7
    $$$$$:   48-block  8
call   15 never executed
    $$$$$:   48-block  9
call   16 never executed
      662:   49:                    break;
      662:   50:                case 3:
      662:   51:                    EXPECT(std::string(i+1, 's'), store.get(i));
      662:   51-block  0
call    0 returned 662
call    1 returned 662
branch  2 taken 662 (fallthrough)
branch  3 taken 0 (throw)
      662:   51-block  1
call    4 returned 662
branch  5 taken 662 (fallthrough)
branch  6 taken 0 (throw)
      662:   51-block  2
call    7 returned 662
call    8 returned 662
branch  9 taken 662 (fallthrough)
branch 10 taken 0 (throw)
      662:   51-block  3
call   11 returned 662
branch 12 taken 662 (fallthrough)
branch 13 taken 0 (throw)
      662:   51-block  4
call   14 returned 662
call   15 returned 662
call   16 returned 662
call   17 returned 662
call   18 returned 662
    $$$$$:   51-block  5
call   19 never executed
    $$$$$:   51-block  6
    $$$$$:   51-block  7
call   20 never executed
    $$$$$:   51-block  8
    $$$$$:   51-block  9
call   21 never executed
    $$$$$:   51-block 10
    $$$$$:   51-block 11
call   22 never executed
    $$$$$:   51-block 12
    $$$$$:   51-block 13
call   23 never executed
    $$$$$:   51-block 14
call   24 never executed
      662:   52:                    break;
    #####:   53:                default:
    #####:   54:                    assert(0);
    %%%%%:   54-block  0
call    0 never executed
        -:   55:            }
        -:   56:        }
        -:   57:
    #####:   58:        phase();
    %%%%%:   58-block  0
call    0 never executed
        -:   59:
    #####:   60:        report();
call    0 never executed
        -:   61:
        -:   62:        /**
        -:   63:         * Write 10MB data to drain previous data out of memory.
        -:   64:         */
    #####:   65:        for (i = 0; i <= 10240; ++i)
    %%%%%:   65-block  0
branch  0 never executed
branch  1 never executed
    #####:   66:            store.put(max + i, std::string(1024, 'x'));
    %%%%%:   66-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   66-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   66-block  2
call    7 never executed
call    8 never executed
    $$$$$:   66-block  3
call    9 never executed
    $$$$$:   66-block  4
    $$$$$:   66-block  5
call   10 never executed
    $$$$$:   66-block  6
call   11 never executed
        -:   67:
        -:   68:        std::cout << "Data is ready, please press ctrl-c/ctrl-d to"
    #####:   69:                     " terminate this program!" << std::endl;
    %%%%%:   69-block  0
call    0 never executed
call    1 never executed
    #####:   70:        std::cout.flush();
call    0 never executed
        -:   71:
        -:   72:        while (true) {
        -:   73:            volatile int dummy;
    #####:   74:            for (i = 0; i <= 1024; ++i) {
    %%%%%:   74-block  0
    %%%%%:   74-block  1
branch  0 never executed
branch  1 never executed
        -:   75:                // The loop slows down the program
    #####:   76:                for (i = 0; i <= 1000; ++i)
    %%%%%:   76-block  0
    %%%%%:   76-block  1
branch  0 never executed
branch  1 never executed
    #####:   77:                    dummy = i;
    %%%%%:   77-block  0
        -:   78:
    #####:   79:                store.del(max + i);
    %%%%%:   79-block  0
call    0 never executed
        -:   80:
    #####:   81:                for (i = 0; i <= 1000; ++i)
    %%%%%:   81-block  0
branch  0 never executed
branch  1 never executed
    #####:   82:                    dummy = i;
    %%%%%:   82-block  0
        -:   83:
    #####:   84:                store.put(max + i, std::string(1024, '.'));
    %%%%%:   84-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   84-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   84-block  2
call    7 never executed
call    8 never executed
    $$$$$:   84-block  3
call    9 never executed
    $$$$$:   84-block  4
    $$$$$:   84-block  5
call   10 never executed
    $$$$$:   84-block  6
call   11 never executed
        -:   85:
    #####:   86:                for (i = 0; i <= 1000; ++i)
    %%%%%:   86-block  0
branch  0 never executed
branch  1 never executed
    #####:   87:                    dummy = i;
    %%%%%:   87-block  0
        -:   88:
    #####:   89:                store.put(max + i, std::string(512, 'x'));
    %%%%%:   89-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   89-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   89-block  2
call    7 never executed
call    8 never executed
    $$$$$:   89-block  3
call    9 never executed
    $$$$$:   89-block  4
    $$$$$:   89-block  5
call   10 never executed
        -:   90:            }
    #####:   91:        }
    %%%%%:   91-block  0
        -:   92:    }
        -:   93:
function _ZN15PersistenceTest4testEy called 0 returned 0% blocks executed 0%
    #####:   94:    void test(uint64_t max)
        -:   95:    {
        -:   96:        uint64_t i;
        -:   97:        // Test data
    #####:   98:        for (i = 0; i < max; ++i) {
    %%%%%:   98-block  0
    %%%%%:   98-block  1
    %%%%%:   98-block  2
branch  0 never executed
branch  1 never executed
    #####:   99:            switch (i & 3) {
    %%%%%:   99-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
    #####:  100:                case 0:
    #####:  101:                    EXPECT(std::string(i+1, 't'), store.get(i));
    %%%%%:  101-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  101-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  101-block  2
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:  101-block  3
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  101-block  4
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
    $$$$$:  101-block  5
call   19 never executed
    $$$$$:  101-block  6
    $$$$$:  101-block  7
call   20 never executed
    $$$$$:  101-block  8
    $$$$$:  101-block  9
call   21 never executed
    $$$$$:  101-block 10
    $$$$$:  101-block 11
call   22 never executed
    $$$$$:  101-block 12
    $$$$$:  101-block 13
call   23 never executed
    $$$$$:  101-block 14
call   24 never executed
    #####:  102:                    break;
    #####:  103:                case 1:
    #####:  104:                    EXPECT(std::string(i+1, 't'), store.get(i));
    %%%%%:  104-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  104-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  104-block  2
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:  104-block  3
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  104-block  4
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
    $$$$$:  104-block  5
call   19 never executed
    $$$$$:  104-block  6
    $$$$$:  104-block  7
call   20 never executed
    $$$$$:  104-block  8
    $$$$$:  104-block  9
call   21 never executed
    $$$$$:  104-block 10
    $$$$$:  104-block 11
call   22 never executed
    $$$$$:  104-block 12
    $$$$$:  104-block 13
call   23 never executed
    $$$$$:  104-block 14
call   24 never executed
    #####:  105:                    break;
    #####:  106:                case 2:
    #####:  107:                    EXPECT(not_found, store.get(i));
    %%%%%:  107-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  107-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  107-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  107-block  3
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  107-block  4
call   13 never executed
    $$$$$:  107-block  5
    $$$$$:  107-block  6
call   14 never executed
    $$$$$:  107-block  7
    $$$$$:  107-block  8
call   15 never executed
    $$$$$:  107-block  9
call   16 never executed
    #####:  108:                    break;
    #####:  109:                case 3:
    #####:  110:                    EXPECT(std::string(i+1, 's'), store.get(i));
    %%%%%:  110-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  110-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  110-block  2
call    7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:  110-block  3
call   11 never executed
branch 12 never executed
branch 13 never executed
    %%%%%:  110-block  4
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
    $$$$$:  110-block  5
call   19 never executed
    $$$$$:  110-block  6
    $$$$$:  110-block  7
call   20 never executed
    $$$$$:  110-block  8
    $$$$$:  110-block  9
call   21 never executed
    $$$$$:  110-block 10
    $$$$$:  110-block 11
call   22 never executed
    $$$$$:  110-block 12
    $$$$$:  110-block 13
call   23 never executed
    #####:  111:                    break;
    #####:  112:                default:
    #####:  113:                    assert(0);
    %%%%%:  113-block  0
call    0 never executed
        -:  114:            }
        -:  115:        }
        -:  116:
    #####:  117:        phase();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:
    #####:  119:        report();
call    0 never executed
    #####:  120:    }
        -:  121:
        -:  122:public:
function _ZN15PersistenceTestC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb called 1 returned 100% blocks executed 100%
        1:  123:    PersistenceTest(const std::string &dir, bool v=true) : Test(dir, v)
        1:  123-block  0
call    0 returned 1
        -:  124:    {
        1:  125:    }
        -:  126:
function _ZN15PersistenceTest10start_testEPv called 1 returned 0% blocks executed 71%
        1:  127:    void start_test(void *args = NULL) override
        -:  128:    {
       1*:  129:        bool testmode = (args && *static_cast<bool *>(args));
        1:  129-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  129-block  1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  129-block  2
        1:  129-block  3
        -:  130:
        1:  131:        std::cout << "KVStore Persistence Test" << std::endl;
        1:  131-block  0
call    0 returned 1
call    1 returned 1
        -:  132:
        1:  133:        if (testmode) {
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  134:            std::cout << "<<Test Mode>>" << std::endl;
    %%%%%:  134-block  0
call    0 never executed
call    1 never executed
    #####:  135:            test(TEST_MAX);
call    0 never executed
        -:  136:        } else {
        1:  137:            std::cout << "<<Preparation Mode>>" << std::endl;
        1:  137-block  0
call    0 returned 1
call    1 returned 1
        1:  138:            prepare(TEST_MAX);
call    0 returned 0
        -:  139:        }
    #####:  140:    }
        -:  141:};
        -:  142:
function _Z5usagePKcS0_S0_ called 1 returned 100% blocks executed 100%
        1:  143:void usage(const char *prog, const char *verb, const char *mode)
        -:  144:{
        1:  145:    std::cout << "Usage: " << prog  << " [-t] [-v]" << std::endl;
        1:  145-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        -:  146:    std::cout << "  -t: test mode for persistence test,"
        -:  147:                 " if -t is not given, the program only prepares data for test."
        1:  148:                 " [currently " << mode << "]" << std::endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        1:  149:    std::cout << "  -v: print extra info for failed tests [currently ";
call    0 returned 1
        1:  150:    std::cout << verb << "]" << std::endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:  151:    std::cout << std::endl;
call    0 returned 1
        1:  152:    std::cout << " NOTE: A normal usage is as follows:" << std::endl;
call    0 returned 1
call    1 returned 1
        1:  153:    std::cout << "    1. invoke `" << prog << "`;" << std::endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        1:  154:    std::cout << "    2. terminate (kill) the program when data is ready;";
call    0 returned 1
        1:  155:    std::cout << std::endl;
call    0 returned 1
        1:  156:    std::cout << "    3. invoke `" << prog << " -t ` to test." << std::endl;
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        1:  157:    std::cout << std::endl;
call    0 returned 1
        1:  158:    std::cout.flush();
call    0 returned 1
        1:  159:}
        -:  160:
        -:  161:
function main called 1 returned 0% blocks executed 13%
        1:  162:int main(int argc, char *argv[])
        -:  163:{
        1:  164:    bool verbose = false;
        1:  165:    bool testmode = false;
        -:  166:
        1:  167:    if (argc == 2) {
        1:  167-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  168:        verbose = std::string(argv[1]) == "-v";
    %%%%%:  168-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  168-block  1
call    4 never executed
call    5 never executed
call    6 never executed
    $$$$$:  168-block  2
call    7 never executed
    $$$$$:  168-block  3
    #####:  169:        testmode = std::string(argv[1]) == "-t";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  169-block  0
call    4 never executed
call    5 never executed
call    6 never executed
    $$$$$:  169-block  1
call    7 never executed
    $$$$$:  169-block  2
        1:  170:    } else if (argc == 3) {
        1:  170-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  171:        verbose = std::string(argv[1]) == "-v" ||
    %%%%%:  171-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  171-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  171-block  2
    %%%%%:  171-block  3
    %%%%%:  171-block  4
call    9 never executed
    %%%%%:  171-block  5
branch 10 never executed
branch 11 never executed
    %%%%%:  171-block  6
call   12 never executed
    $$$$$:  171-block  7
branch 13 never executed
branch 14 never executed
    $$$$$:  171-block  8
call   15 never executed
    $$$$$:  171-block  9
    $$$$$:  171-block 10
branch 16 never executed
branch 17 never executed
    $$$$$:  171-block 11
call   18 never executed
    $$$$$:  171-block 12
    #####:  172:                  std::string(argv[2]) == "-v";
    %%%%%:  172-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  172-block  1
call    4 never executed
    %%%%%:  172-block  2
branch  5 never executed
branch  6 never executed
    %%%%%:  172-block  3
call    7 never executed
    %%%%%:  172-block  4
branch  8 never executed
branch  9 never executed
    %%%%%:  172-block  5
call   10 never executed
    %%%%%:  172-block  6
branch 11 never executed
branch 12 never executed
    $$$$$:  172-block  7
branch 13 never executed
branch 14 never executed
    $$$$$:  172-block  8
call   15 never executed
    $$$$$:  172-block  9
    $$$$$:  172-block 10
branch 16 never executed
branch 17 never executed
    $$$$$:  172-block 11
call   18 never executed
    $$$$$:  172-block 12
    #####:  173:        testmode = std::string(argv[1]) == "-t" ||
    %%%%%:  173-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  173-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  173-block  2
    %%%%%:  173-block  3
    %%%%%:  173-block  4
call    9 never executed
    %%%%%:  173-block  5
branch 10 never executed
branch 11 never executed
    %%%%%:  173-block  6
call   12 never executed
    %%%%%:  173-block  7
    $$$$$:  173-block  8
branch 13 never executed
branch 14 never executed
    $$$$$:  173-block  9
call   15 never executed
    $$$$$:  173-block 10
    $$$$$:  173-block 11
branch 16 never executed
branch 17 never executed
    $$$$$:  173-block 12
call   18 never executed
    $$$$$:  173-block 13
    #####:  174:                   std::string(argv[2]) == "-t";
    %%%%%:  174-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  174-block  1
call    4 never executed
    %%%%%:  174-block  2
branch  5 never executed
branch  6 never executed
    %%%%%:  174-block  3
call    7 never executed
    %%%%%:  174-block  4
branch  8 never executed
branch  9 never executed
    %%%%%:  174-block  5
call   10 never executed
    %%%%%:  174-block  6
branch 11 never executed
branch 12 never executed
    $$$$$:  174-block  7
branch 13 never executed
branch 14 never executed
    $$$$$:  174-block  8
call   15 never executed
    $$$$$:  174-block  9
    $$$$$:  174-block 10
branch 16 never executed
branch 17 never executed
    $$$$$:  174-block 11
call   18 never executed
    $$$$$:  174-block 12
        1:  175:    } else if (argc > 3) {
        1:  175-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:  176:        std::cerr << "Too many arguments." << std::endl;
    %%%%%:  176-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  176-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  177:        usage(argv[0], "OFF", "Preparation Mode");
    %%%%%:  177-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  178:        exit(-1);
    %%%%%:  178-block  0
call    0 never executed
        -:  179:    }
       1*:  180:    usage(argv[0], verbose ? "ON" : "OFF",
        1:  180-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  180-block  1
        1:  180-block  2
        1:  180-block  3
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  180-block  4
        1:  180-block  5
        1:  180-block  6
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        -:  181:          testmode ? "Test Mode" : "Preparation Mode");
        1:  182:verbose = true;
        2:  183:    PersistenceTest test("./data", verbose);
        1:  183-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  183-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:  183-block  2
    $$$$$:  183-block  3
        -:  184:
        1:  185:    test.start_test(static_cast<void *>(&testmode));
call    0 returned 0
branch  1 taken 0 (fallthrough)
branch  2 taken 0 (throw)
        -:  186:
    #####:  187:    return 0;
    #####:  188:}
    %%%%%:  188-block  0
call    0 never executed
    $$$$$:  188-block  1
call    1 never executed
